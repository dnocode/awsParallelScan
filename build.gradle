plugins {id "de.undercouch.download" version "2.0.0"}
group 'com.dnocode.utils.aws'
version '1.0'
apply plugin: 'java'
apply plugin: 'idea'

repositories { jcenter()}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'joda-time:joda-time:2.8.2'
    compile  'com.amazonaws:aws-java-sdk-dynamodb:1.10.22'
    compile 'log4j:log4j:1.2.17'
    testCompile 'junit:junit:4.12'
}

import de.undercouch.gradle.tasks.download.Download

task dynamoup(type: Download) {

    def dynamoFolderFile=new File (projectDir.path+"/dynamoLauncher");
    doFirst { dynamoFolderFile.mkdirs(); }
    src 'http://dynamodb-local.s3-website-us-west-2.amazonaws.com/dynamodb_local_latest.tar.gz'
    dest dynamoFolderFile
    onlyIfNewer true

    doLast {
        copy {
            from tarTree(resources.gzip(dynamoFolderFile.path+"/dynamodb_local_latest.tar.gz"))
            into dynamoFolderFile
        }

        File launchScript=new File(dynamoFolderFile.path+"/startDynamo.sh");

        launchScript.createNewFile();

        launchScript.write("#!/usr/bin/env bash\n" +
                "dynamo=\$(ps aux | grep -0  DynamoDBLocal.jar | wc -l);\n"+
                "if [[ \$dynamo > 1 ]]\n"+
                "then\n"+
                "kill \$(ps aux | grep DynamoDBLocal.jar | awk ' \$11 != \"grep\" { print \$2 }')\n"+
                "fi\n"+
                "java -Djava.library.path=./DynamoDBLocal_lib -jar "+dynamoFolderFile.path+"/DynamoDBLocal.jar -sharedDb -inMemory  > /dev/null 2>&1 & ")

         launchScript.setExecutable(true)

        exec{
         commandLine   dynamoFolderFile.path+"/startDynamo.sh"
        }
    }
}


test.dependsOn dynamoup

